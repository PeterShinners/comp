!shape ~TreeNode = {
    value ~number
    left ~Branch = {}
    right ~Branch = {}
}

!shape ~Branch = ~TreeNode|~nil


!main = {
    // Build tree from values using fold
    $tree = {{5 3 8 1 7 9} accum={}} 
        -> :fold .{{accum value} -> :insert_value}
    
    // Test finding values
    {$tree 7} -> :find_value -> :io:print  // true
    {$tree 4} -> :find_value -> :io:print  // false
}

// inserts
!func :insert_value ~{tree ~nil value ~number} -> ~TreeNode = {
    {value} ~TreeNode
}

!func :insert_value ~{tree ~TreeNode value ~number} -> ~TreeNode = {
    value < tree.value 
        ? {..tree left={{tree.left value} -> :insert_value}}
        | {..tree right={{tree.right value} -> :insert_value}}
}


// finds
!func :find_value ~{tree ~nil value ~number} -> ~bool = {
    #false
}

!func :find_value ~{tree ~TreeNode value ~number} -> ~bool = {
    :lang:switch
        .'tree.value < value' {{tree.left value} -> :find_value}
        .'tree.value > value' {{tree.right value} -> :find_value}
        .else {#true}
}


