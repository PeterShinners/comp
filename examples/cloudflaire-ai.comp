; Cloudflare Worker for vector embeddings and search
; Original: https://developers.cloudflare.com/vectorize/get-started/embeddings/
!import /cloudflare = comp "github://cloudflare/workers-comp@2.7/complib"

!entry = {
	$mod.vectorize = "VECTORIZE" |binding/cloudflare
	$mod.ai = "AI" |binding/cloudflare
}

!func |fetch ^{request ~request/cloudflare} = {
	^request.url 
	|parse/url 
	|dispatch/url
		"/favicon*".{#not-found.response}
		"/insert".{|insert-vectors}
		else.{|query-vectors}
	?> {
		body = %"Request processing failed: ${fail.message}"
		status = status ?? #server-error.response
	}
	|response-json/cloudflare
}

; Only need to generate vector embeddings once (or as data changes)
!func |insert-vectors = {
	; In a real-world application, you could read content from R2 or
	; a SQL database (like D1) and pass it to Workers AI
	@stories = [
		"This is a story about an orange cloud"
		"This is a story about a llama" 
		"This is a story about a hugging emoji"
	]

	@stories |map .{
		text = $in
		model=. ai=. |from $mod
	} 
	|ai-run
	|iter .{
		id = %"${index}"
		values = value.embedding
	} |vectorize-upsert
}

!func |query-vectors = {
	; Your query: expect this to match vector ID 1 in this example
	@user-query = "orange cloud"
	
	{text = @user-query model=. ai=. |from $mod}
	|ai-run
	|vectorize-query topK=1

	; Expect vector ID 1 to be your top match with a score of ~0.89693683
	; This tutorial uses a cosine distance metric, where the closer to one,
	; the more similar.
}
