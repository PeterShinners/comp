!shape ~Tree = {
    value~number
    left~Branch
    right~Branch
}

!shape ~Branch = ~Tree|~nil = {}


!main = {
    ; Build tree from values using fold
    $tree = {{5 3 8 1 7 9} accum={}} 
        -> .fold .{{accum value} -> :insert}
    
    ; Test finding values
    $seven = {$tree 7} -> :contains  ; true
    $four = {$tree 4} -> :contains  ; false
}

; inserts
!func :insert ~{tree~nil value~number} = {
    value~Tree
}

!func :insert ~{tree~Tree value~number} = {
    value < tree.value 
        ? {..tree left={{tree.left value} -> :insert}}
        | {..tree right={{tree.right value} -> :insert}}
}

; finds
!func :contains ~{tree~nil value~number} = {
    #false
}

!func :contains ~{tree~Tree value~number} = {
    :lang/switch
        .'tree.value < value' {{tree.left value} -> :contains}
        .'tree.value > value' {{tree.right value} -> :contains}
        .else {'#true'}
}

; iterate values
!func :values~nil = {
}

!func :values~Tree = [
    value
    ..{left -> :values}
    ..{right -> :values}
]
