!shape ~tree = {
	value ~num
	left ~branch
	right ~branch
}

!shape ~branch = ~tree | ~nil

!main = {
	; Build tree from values using fold
	@tree = {5 3 8 1 7 9} |fold-into .{|insert}

	; Test finding values
	@seven = {tree=@tree value=7} |contains  ; true
	@four = {tree=@tree value=4} |contains   ; false
}


; inserts
!func |insert ~{tree ~nil value ~num} = {
	{value=value}~tree
}

!func |insert ~{tree ~tree value ~num} = {
	|if .{value < tree.value}
			.{..tree left=({tree=tree.left value=value} |insert)}
			.{..tree right=({tree=tree.right value=value} |insert)}
}


; finds
!func |contains ~{tree ~nil value ~num} = {
	#false
}

!func |contains ~{tree ~tree value ~num} = {
	tree.value |match
		.{$in < value} .{{tree=tree.left value=value} |contains}
		.{$in > value} .{{tree=tree.right value=value} |contains}
		.{#true} .{#true}
}


!func |values ~{} = {}

!func |values ~tree = [
	..(left |values)
	value
	..(right |values)
]